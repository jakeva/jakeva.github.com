<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Jake Van Alstyne</title>
 <link href="www.jakevanalstyne.me/atom.xml" rel="self"/>
 <link href="www.jakevanalstyne.me"/>
 <updated>2020-05-13T02:20:08+00:00</updated>
 <id>www.jakevanalstyne.me</id>
 <author>
   <name>Jake Van Alstyne</name>
   <email>jakeva@gmail.com</email>
 </author>

 
 <entry>
   <title>Movie</title>
   <link href="www.jakevanalstyne.me/haikus/2020/05/12/Movie/"/>
   <updated>2020-05-12T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/05/12/Movie</id>
   <content type="html">
&lt;p&gt;Watching a movie&lt;/p&gt;

&lt;p&gt;Without popcorn is not good&lt;/p&gt;

&lt;p&gt;It is very dumb&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/3o7rc0qU6m5hneMsuc.gif&quot; alt=&quot;--Movie--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Chris Bacon</title>
   <link href="www.jakevanalstyne.me/haikus/2020/04/15/Chris-20Bacon/"/>
   <updated>2020-04-15T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/04/15/Chris%20Bacon</id>
   <content type="html">
&lt;p&gt;We can talk about&lt;/p&gt;

&lt;p&gt;The haikus Chris bacon sir&lt;/p&gt;

&lt;p&gt;Any time you wish&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/RyFJnOMPBr13G.gif&quot; alt=&quot;--Chris Bacon--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails v Phoenix</title>
   <link href="www.jakevanalstyne.me/blog/2020/04/15/rails-v-phoenix/"/>
   <updated>2020-04-15T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/blog/2020/04/15/rails-v-phoenix</id>
   <content type="html">
&lt;p&gt;fwiw I think I now have roughly the same amount of experience in both rails and phoenix which doesn’t by any means make me an expert pro with blog worthy opinions, but I do think I slightly prefer elixir/phx. I’ve started a handful of side projects recently and I keep finding myself starting them with elixir. I think I just ‘get it’ better, maybe the magic of rails makes it hard to feel that way for me.
12:19
or maybe it was that i learned rails first and learning phx second made it a gentler learning curve&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Singing</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/30/Singing/"/>
   <updated>2020-03-30T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/30/Singing</id>
   <content type="html">
&lt;p&gt;Someone is singing&lt;/p&gt;

&lt;p&gt;In the middle of the night&lt;/p&gt;

&lt;p&gt;Outside my window&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/143qWPF33HtSTK.gif&quot; alt=&quot;--Singing--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Earthquakes</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/26/Earthquakes/"/>
   <updated>2020-03-26T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/26/Earthquakes</id>
   <content type="html">
&lt;p&gt;The earth shakes at times&lt;/p&gt;

&lt;p&gt;It is most unwelcome here&lt;/p&gt;

&lt;p&gt;Among us earthlings&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/exrSCIegLFnPy.gif&quot; alt=&quot;--Earthquakes--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How I post to this blog using iOS Shortcuts and Pythonista</title>
   <link href="www.jakevanalstyne.me/blog/2020/03/26/how-i-post-to-this-blog-using-ios-shortcuts-and-pythonista/"/>
   <updated>2020-03-26T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/blog/2020/03/26/how-i-post-to-this-blog-using-ios-shortcuts-and-pythonista</id>
   <content type="html">&lt;p&gt;I’ve had this blog for many years, and basically never posted anything. I wanted to become better about that, so I’ve been writing more haikus and trying to write up some of my home projects. My blog uses &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; and is hosted on &lt;a href=&quot;https://pages.github.com&quot;&gt;Github Pages&lt;/a&gt; which already makes it pretty easy to write content but I wanted to see if I could make it even easier. I started with a “create new haiku” shortcut. This way anytime I have an idea for a haiku it doesn’t matter where I am, as long as I have an internet connection on my phone I can post a new one easily.&lt;/p&gt;

&lt;p&gt;So, I began playing with iOS Shortcuts. I wanted a button on my phone that would let me write and post to my blog without needing anything else. The solution I came up with uses a bit of Python in &lt;a href=&quot;http://omz-software.com/pythonista/&quot;&gt;Pythonista&lt;/a&gt; for some formatting, as well as &lt;a href=&quot;https://workingcopyapp.com&quot;&gt;Working Copy&lt;/a&gt; for the git actions.&lt;/p&gt;

&lt;p&gt;Unfornately, the only way to share an iOS shortcut is to share it directly. I wanted to export and paste a JSON payload here or something so others could edit and import easily, but it looks like the only way is to share a public link to it. So, here’s my &lt;a href=&quot;https://www.icloud.com/shortcuts/7d86a57504eb47098bc7d1290e3239d6&quot;&gt;shortcut&lt;/a&gt; for writing and posting a haiku. With a little editing it should be easy enough to change if you wanted to rework it to post to your own blog. It assumes you have the Working Copy app I linked above, as well as a Pythonista script.&lt;/p&gt;

&lt;p&gt;Here are the actions it performs:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pull the latest changes from your blog repo&lt;/li&gt;
  &lt;li&gt;Ask for the name of the Haiku&lt;/li&gt;
  &lt;li&gt;Executes a search in &lt;a href=&quot;https://giphy.com&quot;&gt;Giphy&lt;/a&gt; for the given title and lets you choose your favorite gif&lt;/li&gt;
  &lt;li&gt;Stages the chosen gif in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/assets&lt;/code&gt; in your repo&lt;/li&gt;
  &lt;li&gt;Asks for the content of the Haiku. Adding an empty line between each line of content renders the content on new lines. I haven’t figured this part out yet, but if you don’t do this the whole haiku ends up on one line.&lt;/li&gt;
  &lt;li&gt;It then sends the input to the Pythonista script to format it as Jekyll front matter&lt;/li&gt;
  &lt;li&gt;It takes the resulting formatted content and stages it as a new file in your repo&lt;/li&gt;
  &lt;li&gt;It commits the changes to your repo and pushes to remote&lt;/li&gt;
  &lt;li&gt;It then texts my girlfriend to let her know there’s a new haiku (I haven’t tested this with other people, but I expect that unless you have her number it won’t work for you)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So now the only piece missing is the Pythonista script. Here it is:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from webbrowser import open
from datetime import date
from urllib.parse import quote, unquote
import sys
import x_callback_url

title=sys.argv[1]
body=sys.argv[2]
gif=quote(sys.argv[3])

haiku='''---
layout: haiku
category: Haikus
title: ''' + title + '''
---



''' + body + '''

![--''' + title + '''--](\{\{ site.url \}\}/assets/''' + gif + '''.gif)'''

x_success = sys.argv[-1] # shortcuts-production://x-callback-url/ic-success/&amp;lt;UUID&amp;gt;
x_cancel = x_success.replace('ic-success', 'ic-cancel')
x_error = x_success.replace('ic-success', 'ic-error')

x_success += '?x-source=Pythonista3'
x_success += '&amp;amp;result=' + quote(haiku)
x_success += '&amp;amp;datetime=' + quote(str(date.today().strftime('%Y-%m-%d')))

open(x_success)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ve been having fun with this, I’ve also made a version that will make a full blog post like this one but haven’t used it much since writing long form on an iOS device is not that convenient for me. Anyway, if you’re reading this feel free to play with my shortcut and python script! I’d love to hear about any projects you use them for!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>GPG & YubiKey & You</title>
   <link href="www.jakevanalstyne.me/blog/2020/03/14/gpg-yubikey-you/"/>
   <updated>2020-03-14T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/blog/2020/03/14/gpg--yubikey--you</id>
   <content type="html">&lt;p&gt;I’ve recently taken on the task of setting up my YubiKeys for usage beyond 2 factor auth. Something I learned was that OpenPGP smartcards (which include YubiKeys) have slots for three separate keys: Signature, Encryption, and Authentication.&lt;/p&gt;

&lt;p&gt;My first goal is to sign git commits with it. Because I am a man of negligible importance, this is in fact NOT an excercise in security. I’m taking more of a hobbyist approach. If security was of a more significant concern in my life, I would probably generate my keys in a live booted and air gapped &lt;a href=&quot;https://tails.boum.org&quot;&gt;Tails&lt;/a&gt; environment.&lt;/p&gt;

&lt;p&gt;When I started going down this route I had only in the first place acquired my YubiKey to simplify 2 factor authorization, a flow that I have found myself increasingly spending time due to work and the fact I turn it on everywhere that supports it. I think I was vaguely aware they could be used for more. Regardless, I started by playing around with signing. One of the first things I became aware of was that these things have PIN codes. Never needed them for 2FA, but for managing GPG keys you do. The default user PIN (which is used for signing, among other things) is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;123456&lt;/code&gt; and the default admin PIN (used for modifying certain card attributes) is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12345678&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you’re following along, I’m assuming you have a YubiKey and a recent version of GnuPG.&lt;/p&gt;

&lt;h2 id=&quot;configure-your-yubikey&quot;&gt;Configure your YubiKey&lt;/h2&gt;
&lt;p&gt;To change the PIN (and configure things like your name, language, etc) run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg --card-edit&lt;/code&gt; with your key plugged in. You should see information about your key. Type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help&lt;/code&gt; to enable and list the available commands. Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passwd&lt;/code&gt; to change the user PIN code.&lt;/p&gt;

&lt;h2 id=&quot;a-little-about-gpg-keys&quot;&gt;A little about GPG keys&lt;/h2&gt;
&lt;p&gt;GPG keys have capabilities: Sign, Certify, and Encrypt. When you generate a GPG public / private keypair, by default you get a primary pub/priv key and a sub pub/priv key. The primary key can Sign and Certify. The subkey can Encrypt. The reason for this default is that Certify is all powerful. It really is your identity. Delegating powers to other keys signed by it is a good way to reduce your security footprint. If someone steals your encrypt key, all you have to do is revoke it, create a new one, and Certify it with your unstolen primary key. If someone steals your primary private key, well they’ve just stolen the ability to revoke your other keys or make new keys as you. So keep it extra safe.&lt;/p&gt;

&lt;h2 id=&quot;create-a-gpg-key&quot;&gt;Create a GPG key&lt;/h2&gt;
&lt;p&gt;It’s time to generate your GPG key. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg --expert --full-gen-key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RSA and RSA(default)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Key size: depending on the version of your key
    &lt;ul&gt;
      &lt;li&gt;YubiKey NEO - 2048&lt;/li&gt;
      &lt;li&gt;YubiKey 4 / 5 - 4096&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Do it again for the subkey&lt;/li&gt;
  &lt;li&gt;Pick an expiration date&lt;/li&gt;
  &lt;li&gt;Enter your name (must be more than 5 characters)&lt;/li&gt;
  &lt;li&gt;Enter your email&lt;/li&gt;
  &lt;li&gt;Enter an optional comment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note the ID of the key generated. For fun, let’s look at what we’ve got so far. Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg --edit-key &amp;lt;KEY ID&amp;gt;&lt;/code&gt;. You should see something like&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Secret key is available.

gpg: checking the trustdb
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: depth: 0  valid:   2  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 2u
gpg: next trustdb check due at 2021-03-12
sec  rsa4096/98973C978ECA988D
     created: 2020-03-14  expires: never       usage: SC
     trust: ultimate      validity: ultimate
ssb  rsa4096/015D68EE1E7AC274
     created: 2020-03-14  expires: never       usage: E
[ultimate] (1). Jake Van Alstyne (testing) &amp;lt;email@address.org&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The usage of the first key is marked as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SC&lt;/code&gt;. The second is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;E&lt;/code&gt;. That means the primary key can sign and certify, while the subkey can encrypt.&lt;/p&gt;

&lt;p&gt;If you have an existing key, you could use it to sign this new one to maintain a chain of custody: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg -u &amp;lt;your_old_keyid&amp;gt; --sign-key &amp;lt;longid&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;While we’re here, let’s add separate authentication and signing keys to prepare to fill the slots on the YubiKey.&lt;/p&gt;

&lt;h3 id=&quot;authentication-key&quot;&gt;Authentication Key&lt;/h3&gt;
&lt;p&gt;If you’re still at the gpg prompt &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg&amp;gt;&lt;/code&gt; from the last command, exit out with Ctrl-C or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quit&lt;/code&gt; and enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg --expert --edit-key &amp;lt;KEY ID&amp;gt;&lt;/code&gt;. Notice the extra flag for expert. Now enter the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addkey&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pick RSA.&lt;/li&gt;
  &lt;li&gt;Toggle capabilities until only authentication is enabled. You should need to enter each option once: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;S, E, A&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Q&lt;/code&gt; to finish&lt;/li&gt;
  &lt;li&gt;Pick the key size&lt;/li&gt;
  &lt;li&gt;Pick the expiration (good idea to keep it the same as your master key)&lt;/li&gt;
  &lt;li&gt;Follow the rest of the prompts&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;signing-key&quot;&gt;Signing Key&lt;/h3&gt;
&lt;p&gt;The steps are the same as for the authentication key, only you should only have to deselect Encrypt when picking the key capabilities since by default Signing and Encryption are selected.
If you &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quit&lt;/code&gt; out of here now, make sure to save or you’ll lose the keys you just made.&lt;/p&gt;

&lt;h2 id=&quot;backup-your-keys&quot;&gt;Backup your keys&lt;/h2&gt;
&lt;p&gt;It’s a good idea to keep a backup somewhere safe.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg --armor --output privkey.sec --export-secret-key &amp;lt;longid&amp;gt;
gpg --armor --output subkeys.sec --export-secret-subkeys &amp;lt;longid&amp;gt;
gpg --armor --output pubkey.asc --export &amp;lt;longid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;import-key-to-yubikey&quot;&gt;Import key to YubiKey&lt;/h2&gt;
&lt;p&gt;Make sure the YubiKey is plugged into your computer. Edit the key again, if you aren’t already &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg --edit-key &amp;lt;KEY ID&amp;gt;&lt;/code&gt;. Enter the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toggle&lt;/code&gt; followed by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keytocard&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; to move the primary key&lt;/li&gt;
  &lt;li&gt;Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;. This moves the signature subkey to the signature slot of the YubiKey.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key 1&lt;/code&gt; (which now should select the encryption key) followed by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keytocard&lt;/code&gt;. Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;. This moves the encryption key to the encryption slot.&lt;/p&gt;

&lt;p&gt;Enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key 1&lt;/code&gt; again and then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key 2&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keytocard&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3&lt;/code&gt;. This does the same but for the authentication key.&lt;/p&gt;

&lt;p&gt;Now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quit&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; for save.&lt;/p&gt;

&lt;p&gt;Now your secret keys are on your YubiKey and can be used for their intended purpose when it’s connected.&lt;/p&gt;

&lt;h2 id=&quot;configure-git-for-commit-signing&quot;&gt;Configure Git for commit signing&lt;/h2&gt;
&lt;p&gt;Configure git for GPG signing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --global commit.gpgsign true&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config --global user.signingkey &amp;lt;KEY ID&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And let’s restart the GPG agent: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg-connect-agent reloadagent&lt;/code&gt;. Get out of there with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bye&lt;/code&gt;. Now when you make a commit, git will require the key to be present. If it’s not, the commit will fail. If you want to make a signed commit and see what it looks like in the log, the command for that is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log --show-signature&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg: Signature made Sat Mar 14 03:30:27 2020 MDT
gpg:                using RSA key 05FFE31C369D8F25CFFF2167FDF8E68C5B840388
gpg: Good signature from &quot;Jake Van Alstyne &amp;lt;jakeva@gmail.com&amp;gt;&quot; [ultimate]
Author: Jake Van Alstyne 🎩 &amp;lt;jakeva@gmail.com&amp;gt;
Date:   Sat Mar 14 03:27:35 2020 -0600

    Add YubiKey Post
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;configure-github-for-the-verified-stamp&quot;&gt;Configure Github for the ‘Verified’ stamp&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpg --armor --export &amp;lt;KEY ID&amp;gt; | pbcopy&lt;/code&gt; and take it to &lt;a href=&quot;https://github.com/settings/gpg/new&quot;&gt;add as a new GPG key on Github&lt;/a&gt;. If you forget this stamp, your commits will still show as signed but ‘Unverified’.&lt;/p&gt;

&lt;h2 id=&quot;etc&quot;&gt;Etc&lt;/h2&gt;
&lt;p&gt;Something interesting I noticed is that the gpg-agent caches the key. I removed the key from my computer before making another commit and it still got signed. It looks like this is set in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.gnupg/gpg-agent.conf&lt;/code&gt; so just a heads up.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Wasting time</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/12/Wasting-20time/"/>
   <updated>2020-03-12T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/12/Wasting%20time</id>
   <content type="html">
&lt;p&gt;I like wasting time&lt;/p&gt;

&lt;p&gt;And I like wasting your time&lt;/p&gt;

&lt;p&gt;I did it again&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/cKnxiph10lNCP3DCnv.gif&quot; alt=&quot;--Wasting time--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Virus</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/12/Virus/"/>
   <updated>2020-03-12T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/12/Virus</id>
   <content type="html">
&lt;p&gt;Is it a virus&lt;/p&gt;

&lt;p&gt;If it doesn’t go viral&lt;/p&gt;

&lt;p&gt;And other questions&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/QtXF6x3sfisPm.gif&quot; alt=&quot;--Virus--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Food</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/12/Food/"/>
   <updated>2020-03-12T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/12/Food</id>
   <content type="html">
&lt;p&gt;My girlfriend makes food&lt;/p&gt;

&lt;p&gt;She learned this art in China&lt;/p&gt;

&lt;p&gt;It tastes like Chinese&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/jKaFXbKyZFja0.gif&quot; alt=&quot;--Food--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Blogs</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/12/Blogs/"/>
   <updated>2020-03-12T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/12/Blogs</id>
   <content type="html">
&lt;p&gt;Blogs have to be good&lt;/p&gt;

&lt;p&gt;If you want people to read&lt;/p&gt;

&lt;p&gt;People don’t read mine&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/kTEqpBl5W9X2w.gif&quot; alt=&quot;--Blogs--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Blacklist</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/12/Blacklist/"/>
   <updated>2020-03-12T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/12/Blacklist</id>
   <content type="html">
&lt;p&gt;If you blacklist me&lt;/p&gt;

&lt;p&gt;I will blacklist you right back&lt;/p&gt;

&lt;p&gt;And we will not talk&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/1NovKUUyYfJpS.gif&quot; alt=&quot;--Blacklist--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Haiku</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/11/Haiku/"/>
   <updated>2020-03-11T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/11/Haiku</id>
   <content type="html">
&lt;p&gt;This is a haiku&lt;/p&gt;

&lt;p&gt;It checks all of the boxes&lt;/p&gt;

&lt;p&gt;And now it is done&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/VzfYdUDFIsoot2jLbx.gif&quot; alt=&quot;--Haiku--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Beer</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/05/Beer/"/>
   <updated>2020-03-05T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/05/Beer</id>
   <content type="html">
&lt;p&gt;Beer is very good&lt;/p&gt;

&lt;p&gt;I drink it often for fun&lt;/p&gt;

&lt;p&gt;Including right now&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/zrj0yPfw3kGTS.gif&quot; alt=&quot;--Beer--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Richard</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/04/Richard/"/>
   <updated>2020-03-04T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/04/Richard</id>
   <content type="html">
&lt;p&gt;Richard has nice breath&lt;/p&gt;

&lt;p&gt;I wish he could write good code&lt;/p&gt;

&lt;p&gt;But alas he can’t&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/LRerEvcrQZwpYpvcJE.gif&quot; alt=&quot;--Richard--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Typos from old books</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/03/Typos-20from-20old-20books/"/>
   <updated>2020-03-03T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/03/Typos%20from%20old%20books</id>
   <content type="html">
&lt;p&gt;A piecture is just&lt;/p&gt;

&lt;p&gt;A pie chart of types of pie&lt;/p&gt;

&lt;p&gt;In Antarctica&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ghCZxkkgKIc6qOLOu8.gif&quot; alt=&quot;--Typos from old books--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ramen</title>
   <link href="www.jakevanalstyne.me/haikus/2020/03/02/Ramen/"/>
   <updated>2020-03-02T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2020/03/02/Ramen</id>
   <content type="html">
&lt;p&gt;Ramen is so good&lt;/p&gt;

&lt;p&gt;It has noodles, pork, and stuff&lt;/p&gt;

&lt;p&gt;To stuff in my face&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ZFuPxYpT4qYOWnDAno.gif&quot; alt=&quot;--Ramen--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Raspberry Pi BTC Node</title>
   <link href="www.jakevanalstyne.me/blog/2020/03/01/raspberry-pi-btc-node/"/>
   <updated>2020-03-01T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/blog/2020/03/01/raspberry-pi-btc-node</id>
   <content type="html">
&lt;h2 id=&quot;time-to-put-one-of-my-spare-raspberry-pis-to-work&quot;&gt;Time to put one of my spare Raspberry Pis to work&lt;/h2&gt;
&lt;p&gt;I woke up this morning and thought, ‘Hey why not get a full BTC node running on one of those Pis you got laying around?’ So that’s what I’m doing today.&lt;/p&gt;

&lt;h2 id=&quot;basics&quot;&gt;Basics&lt;/h2&gt;
&lt;p&gt;This assumes something like &lt;a href=&quot;https://www.raspberrypi.org/downloads/raspbian/&quot;&gt;Raspbian Lite&lt;/a&gt; is already installed and SSH access configured. For Wifi, I use these &lt;a href=&quot;https://www.amazon.com/gp/product/B003MTTJOY&quot;&gt;Edimax USB chips&lt;/a&gt;. Configuring them is not too difficult. It boils down a simple config in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/network/interfaces/&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auto lo

iface lo inet loopback
iface eth0 inet dhcp

auto wlan0
allow-hotplug wlan0
iface wlan0 inet dhcp
wpa-ssid &quot;**YOUR_WIFI**&quot;
wpa-psk &quot;**YOUR_PASSWORD**&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m going to install to the 32 GB SD mini card I used for the OS, which means I’m not planning on storing all the blocks. And since flash is less resilient than a HDD, I’m going to disable SWAP.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo swapoff --all&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;installing-the-bitcoin-client&quot;&gt;Installing the Bitcoin client&lt;/h2&gt;
&lt;p&gt;Go to &lt;a href=&quot;https://github.com/bitcoin/bitcoin/releases&quot;&gt;https://github.com/bitcoin/bitcoin/releases&lt;/a&gt; and make not of the newest stable release. For me it’s currently 0.19.0.1. So, with that:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
git clone -b v0.19.0.1 https://github/com/bitcoin/bitcoin.git
cd bitcoin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m going to install it without a wallet, since I only want a node.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./autogen.sh
./configure CXXFLAGS=&quot;--param ggc-min-expand=1 --param ggc-min-heapsize=32768&quot; --enable-cxx --without-gui --disable-shared --with-pic --disable-tests --disable-bench --enable-upnp-default --disable-wallet
make # This will take a long time, best run in tmux or screen, and grab a beer
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;configure&quot;&gt;Configure&lt;/h2&gt;
&lt;p&gt;For this, I want a bitcoin user.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo adduser bitcoin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now switch to the new user
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo su - bitcoin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And create the app data directory
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkdir ~/.bitcoin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bitcoin/bitcoin.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# makes client run in background
daemon=1
# is required by Fail2Ban described below
logips=1
# magic RBP optimisations
maxconnections=40
maxuploadtarget=5000

# Run without SWAP
dbcache=100
maxorphantx=10
maxmempool=50

upnp=1

prune=550 # Only keep the last two days of blocks if like me you are running off a small SD card
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Return to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pi&lt;/code&gt; user
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now create the systemd service to launch the bitcoin client daemon
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo vim /etc/systemd/system/bitcoind.service&lt;/code&gt;
and give it the following&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Bitcoin daemon
After=network.target
[Service]
ExecStart=/usr/local/bin/bitcoind -conf=/home/bitcoin/.bitcoin/bitcoin.conf -pid=/home/bitcoin/.bitcoin/bitcoind.pid
# Creates /run/bitcoind owned by bitcoin
RuntimeDirectory=bitcoind
User=bitcoin
Type=forking
PIDFile=/home/bitcoin/.bitcoin/bitcoind.pid
Restart=on-failure
# Hardening measures
####################
# Provide a private /tmp and /var/tmp.
PrivateTmp=true
# Mount /usr, /boot/ and /etc read-only for the process.
ProtectSystem=full
# Disallow the process and all of its children to gain
# new privileges through execve().
NoNewPrivileges=true
# Use a new /dev namespace only populated with API pseudo devices
# such as /dev/null, /dev/zero and /dev/random.
PrivateDevices=true
# Deny the creation of writable and executable memory mappings.
MemoryDenyWriteExecute=true
[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make sure the new service starts on boot
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo systemctl enable bitcoind&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;security&quot;&gt;Security&lt;/h2&gt;
&lt;p&gt;Uncomplicated firewall
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install ufw&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Allow limited ssh
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw limit ssh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Allow for main net bitcoin traffic
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw allow 8333 comment &quot;Bitcoin mainnet&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Enable the firewall
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw enable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Preview the enforced rules
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo ufw status verbose&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install Fail2ban
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install fail2ban&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See the active jails - for now it will only be sshd
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo fail2ban-client status&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Start the bitcoin client
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo systemctl start bitcoind&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will take a few minutes to start, but if you want to monitor its progress switch back to the bitcoin user and enter
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tail -n 100 -f ~/.bitcoin/debug.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You will need to figure out how to forward port 8333 to your new btc node depending on your router.&lt;/p&gt;

&lt;p&gt;Check it’s accessible from the outside world with
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -sL https://bitnodes.earn.com/api/v1/nodes/me-8333/ | jq&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Building my own NAS</title>
   <link href="www.jakevanalstyne.me/blog/2020/02/23/diy-nas/"/>
   <updated>2020-02-23T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/blog/2020/02/23/diy-nas</id>
   <content type="html">&lt;h2 id=&quot;first-a-little-background&quot;&gt;First a little background&lt;/h2&gt;
&lt;p&gt;I had a couple old NAS storage solutions I pulled out of, well, my storage unit a while back. Tried to set them up in my office and found them to be really difficult to use, but the data on them is still good. So I pulled the disks out and decided to look into upgrading to something newer. After some research, I concluded the existing out-of-the-box solutions available are overpriced for what they offer. I decided I wanted more control over the parts to reduce cost, as well as having more freedom in setting up the server software so I looked into building my own.&lt;/p&gt;

&lt;h2 id=&quot;parts&quot;&gt;Parts&lt;/h2&gt;
&lt;p&gt;I used &lt;a href=&quot;https://pcpartpicker.com&quot;&gt;PC Partpicker&lt;/a&gt; to help me narrow down what I was looking for. I went in blind hoping I’d find a tower suitable for what I wanted, and I think I found the perfect one. Everything else was selected to fit it.&lt;/p&gt;

&lt;table class=&quot;table-dark&quot;&gt;
  &lt;tr&gt;
    &lt;th scope=&quot;col&quot;&gt;Part&lt;/th&gt;
    &lt;th scope=&quot;col&quot;&gt;Price&lt;/th&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://pcpartpicker.com/product/yTdqqs/fractal-design-case-fdcanode804blw&quot;&gt;Fractal Design Node 804 MicroATX Mid Tower Case&lt;/a&gt;
      &lt;p&gt;This is particularly recommended for a NAS build. Both on Amazon and Newegg, reviews were a bit mixed but for a little over $100 I decided I could handle a few imperfections. Right now I have 7 3.5&quot; drives ranging from 1 to 4 TB, and 1 2.5&quot; SSD I want to use as the boot disk. Between disk bay utilization and cooling options, this tower promises some pretty interesting flexibility. In their own words, it has a &quot;Unique hard drive mounting system, fitting up to 8 x 3.5&quot;, 4 x 2.5&quot; or up to 10 x 3.5&quot;, 2 x 2.5&quot; drives HDD/SSD&quot; all inside a 13.5 x 12 x 15.3in package. That's 12 slots for hard drives! That should fit my needs perfectly with plenty of room for future upgrades and fit nicely under my desk.&lt;/p&gt;
    &lt;/td&gt;
    &lt;td&gt;$109.99&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://pcpartpicker.com/product/RkJtt6/amd-ryzen-3-2200g-35ghz-quad-core-processor-yd2200c5fbbox&quot;&gt;AMD Ryzen 3 2200G 3.5 GHz Quad-Core Processor&lt;/a&gt;
      &lt;p&gt;At first I was just interested in picking up a 2 core CPU since I intend on doing nothing with this machine except serving up files to my home network. I'm the only user, so I don't need much CPU. However, I found it tricky to pair up a 2 core CPU with a motherboard so I just picked a reasonable quad core. It might be a little over kill, but that's ok.&lt;/p&gt;
    &lt;/td&gt;
    &lt;td&gt;$107.68&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;p&gt;I had more trouble finding the right motherboard. I ordered a cheap one early on, forgetting to check how many SATA slots it had. What I ordered was the&lt;/p&gt;
      &lt;a href=&quot;https://pcpartpicker.com/product/RD97YJ/asrock-b450m-hdv-r40-micro-atx-am4-motherboard-b450m-hdv-r40&quot;&gt;ASRock B450M-HDV R4.0 Micro ATX AM4 Motherboard&lt;/a&gt;
      &lt;p&gt;which comes with 4 SATA 6 Gb/s slots. That won't be enough, but for the price, I can slap some extra slots in with the…&lt;/p&gt;
    &lt;/td&gt;
    &lt;td&gt;$69.97&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://www.amazon.com/dp/B07S8CB398/&quot;&gt;Ziyituod SATA3.0 Card&lt;/a&gt;
      &lt;p&gt;6 SATA 6 Gb/s PCIe controller. Problem solved.&lt;/p&gt;
    &lt;/td&gt;
    &lt;td&gt;$39.95&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://www.amazon.com/dp/B019FRDFU0&quot;&gt;Crucial 4GB Single DDR4&lt;/a&gt;
      &lt;p&gt;Like I don't need much processing power, I don't need much ram. Two sticks of 4 GB DDR4 should do it.&lt;/p&gt;
    &lt;/td&gt;
    &lt;td&gt;$39.98&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://www.amazon.com/dp/B01KVNCEIG&quot;&gt;be Quiet! Pure Rock Slim - CPU Cooler&lt;/a&gt;
      &lt;p&gt;A concern I had was how loud this thing was going to be. I picked a CPU cooler that promises it gets no louder than 25 Db. The fans that come with the tower might be a different story, but I can worry about those later if it's an issue. Anyway, this thing is pretty cheap too.&lt;/p&gt;
    &lt;/td&gt;
    &lt;td&gt;$33.28&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&quot;https://www.newegg.com/evga-supernova-850-g2-220-g2-0850-xr-850w/p/N82E16817438018?Item=N82E16817438018&quot;&gt;EVGA SuperNOVA 800W&lt;/a&gt;
      &lt;p&gt;And the final piece is the power supply. Need enough power for up to ten drives, so here we are.&lt;/p&gt;
    &lt;/td&gt;
    &lt;td&gt;$159.99&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;This brings the total to a little over $500. By comparison you can get an &lt;a href=&quot;https://www.amazon.com/Synology-Bay-Diskstation-Diskless-DS1819/dp/B07KMKDW42/&quot;&gt;8 bay NAS by Synology&lt;/a&gt; for $931.&lt;/p&gt;

&lt;h2 id=&quot;now-i-wait&quot;&gt;Now I wait&lt;/h2&gt;
&lt;p&gt;I haven’t got all the parts yet, but I’ll post an update when I get it built and have a chance to play with it. I expect there will be some tradeoffs, like the interior will probably be a bit cramped and hard to work with. Maybe it will get a little hot or loud with the four fans. But I’m excited, I didn’t think I’d be able to find a solution that would fit 10 drives in around a square foot of floor space. At less than $500, for me it’s a no brainer.&lt;/p&gt;

&lt;h2 id=&quot;and-whats-next&quot;&gt;And what’s next?&lt;/h2&gt;
&lt;p&gt;Of course, I’m already thinking down the road. Right now I only have a little over 12 TBs of hard drives ready to put to use (consisting mostly of Bluray backups and music), but at $485 for a &lt;a href=&quot;https://www.amazon.com/Seagate-IronWolf-16TB-Internal-Drive/dp/B07SGGWYC1&quot;&gt;16 TB Drive&lt;/a&gt; I am imagining a world where I spend a small fortune for a +13x increase and while I’ll probably never need it, it is pretty fun to imagine.&lt;/p&gt;

&lt;h1 id=&quot;small-update&quot;&gt;Small Update&lt;/h1&gt;
&lt;p&gt;Ok so I bought two of the 16 TB drives intending to get a simple mirror up. Funny story, I snapped the plastic on the sata connector of one of them trying to fit it into the case. It is pretty tight in there. Anyway, I bought a third to replace it. But by the time it arrived I decided it was worth trying to salvage the broken one. The pins were still there and I had the broken off plastic piece, so I sort of put it back together delicately and slid it all back in. It worked! The system connected to the drive and now I’ve got a healthy 32 TB Raid Z1 pool running in my FreeNAS!&lt;/p&gt;

&lt;p&gt;I’m working now on setting up torrenting over OpenVPN among other things. I’ll write some of that up in separate blog posts.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Denver</title>
   <link href="www.jakevanalstyne.me/haikus/2017/08/17/denver/"/>
   <updated>2017-08-17T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2017/08/17/denver</id>
   <content type="html">
&lt;p&gt;I am in Denver&lt;/p&gt;

&lt;p&gt;It is just like Salt Lake City&lt;/p&gt;

&lt;p&gt;Except, like, bigger&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Denver.jpg&quot; alt=&quot;--Denver--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>In defense of the new MacBook Pro touchbar</title>
   <link href="www.jakevanalstyne.me/haikus/2017/08/15/in-defense-of-the-new-macbook-pro-touchbar/"/>
   <updated>2017-08-15T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2017/08/15/in-defense-of-the-new-macbook-pro-touchbar</id>
   <content type="html">
&lt;p&gt;It is a fun way&lt;/p&gt;

&lt;p&gt;To do things you did before&lt;/p&gt;

&lt;p&gt;Why not something new?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/touchbar.jpg&quot; alt=&quot;--In defense of the new MacBook Pro touchbar--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Waking up</title>
   <link href="www.jakevanalstyne.me/haikus/2015/02/14/waking-up/"/>
   <updated>2015-02-14T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2015/02/14/waking-up</id>
   <content type="html">
&lt;p&gt;Nope, nope, nope, nope, nope&lt;/p&gt;

&lt;p&gt;Nope, nope, nope, nope, nope, nope, nope&lt;/p&gt;

&lt;p&gt;Nope, nope, nope, nope, nope&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/waking-up.png&quot; alt=&quot;--Waking up--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting out of bed</title>
   <link href="www.jakevanalstyne.me/haikus/2015/02/14/getting-out-of-bed/"/>
   <updated>2015-02-14T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2015/02/14/getting-out-of-bed</id>
   <content type="html">
&lt;p&gt;No no no no no&lt;/p&gt;

&lt;p&gt;No no no no no no no&lt;/p&gt;

&lt;p&gt;No no no no no&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/fetal-bed.jpg&quot; alt=&quot;--Bed--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Space-time</title>
   <link href="www.jakevanalstyne.me/haikus/2013/05/03/space-time/"/>
   <updated>2013-05-03T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2013/05/03/space-time</id>
   <content type="html">
&lt;p&gt;Time and space are one&lt;/p&gt;

&lt;p&gt;So it is all relative&lt;/p&gt;

&lt;p&gt;Please pardon the pun&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/space-time.jpg&quot; alt=&quot;--&amp;quot;Space-time&amp;quot;--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Evening</title>
   <link href="www.jakevanalstyne.me/haikus/2013/04/22/evening/"/>
   <updated>2013-04-22T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2013/04/22/evening</id>
   <content type="html">
&lt;p&gt;In the evening&lt;/p&gt;

&lt;p&gt;I am joined by Page and Plant&lt;/p&gt;

&lt;p&gt;but do not ascend&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/evening.jpg&quot; alt=&quot;--&amp;quot;Evening&amp;quot;--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Chairs</title>
   <link href="www.jakevanalstyne.me/haikus/2013/04/14/chairs/"/>
   <updated>2013-04-14T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2013/04/14/chairs</id>
   <content type="html">
&lt;p&gt;Made of good hard wood&lt;/p&gt;

&lt;p&gt;Sitting straight is important&lt;/p&gt;

&lt;p&gt;If you like your spine&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/chair.jpg&quot; alt=&quot;--&amp;quot;Chairs&amp;quot;--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Breakfast</title>
   <link href="www.jakevanalstyne.me/haikus/2013/04/14/breakfast/"/>
   <updated>2013-04-14T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2013/04/14/breakfast</id>
   <content type="html">
&lt;p&gt;The first and best meal&lt;/p&gt;

&lt;p&gt;Forget brunch, breakfast is good&lt;/p&gt;

&lt;p&gt;enough to eat twice&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/breakfast.jpg&quot; alt=&quot;--Breakfast--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Music</title>
   <link href="www.jakevanalstyne.me/haikus/2013/04/13/music/"/>
   <updated>2013-04-13T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2013/04/13/music</id>
   <content type="html">
&lt;p&gt;Listen to music&lt;/p&gt;

&lt;p&gt;From Mozart to the Beatles&lt;/p&gt;

&lt;p&gt;Feel infinity&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/music.jpg&quot; alt=&quot;--Music--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Bubbles</title>
   <link href="www.jakevanalstyne.me/haikus/2013/04/13/bubbles/"/>
   <updated>2013-04-13T00:00:00+00:00</updated>
   <id>www.jakevanalstyne.me/haikus/2013/04/13/bubbles</id>
   <content type="html">
&lt;p&gt;Bubbles down the drain&lt;/p&gt;

&lt;p&gt;Remind me I am one too&lt;/p&gt;

&lt;p&gt;One day I will pop&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/bubbles.jpg&quot; alt=&quot;--Bubbles--&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
