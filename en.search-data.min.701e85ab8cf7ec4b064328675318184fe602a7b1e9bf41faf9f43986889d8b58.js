'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/weblog/','title':"Weblog",'content':"Blog #  "});index.add({'id':1,'href':'/docs/travelog/europe-2016/france/caen/','title':"Caen",'content':"Europe Part 2.1 - Caen, France #  Caen #     "});index.add({'id':2,'href':'/docs/travelog/europe-2016/','title':"Europe 2016",'content':"Europe 2016 #   This is a work in progress. I have a ton of photos to go through and organize.\n Leaving Town #  Around the spring of 2016 I hatched a plan to escape my responsibilities for a while and travel across Europe by train. I announced my plans to my employer at the time who responded quite well. So, I bought a month long unlimited Rail Pass and booked some flights. I would leave toward the end of July that year and return about 6 weeks later.\nI packed a single backpack with a few changes of clothes, my laptop, toothbrush, and that was pretty much it. I wanted to live something like a digital nomad for a while. Between my cell phone (the service for which was covered in Europe by T-Mobile) and my laptop, I figured I would be able to figure it out. Whatever \u0026lsquo;it\u0026rsquo; would be.\nI must have stayed in 20 cities and traveled at least one or two thousand miles by train, so for the sake of breaking things up, let me try to just break it down by country. I\u0026rsquo;ll describe each country\u0026rsquo;s adventures and link to a page with photos to help break it down even further.\nIreland #   Ireland  Dublin Howth Ferry    France #   France  Caen Paris  The Louvre      Belgium #   Belgium  "});index.add({'id':3,'href':'/docs/travelog/world-trip-2018/china/shanghai/','title':"Shanghai / Suzhou",'content':"Shanghai and Suzhou #  Shanghai is, of course, amazing. We also took some time to visit a small (for the chinese) nearby town called Suzhou. Incredible beauty and history.\n    "});index.add({'id':4,'href':'/docs/travelog/world-trip-2018/china/','title':"China",'content':"China #  Holy shit, I was in China.\n"});index.add({'id':5,'href':'/docs/travelog/europe-2016/ireland/','title':"Ireland",'content':"Europe Part 1 - Ireland #  Dublin #  I flew into Dublin via JFK. I stayed a few days to catch up with a colleague who lived there and we may or may not have enjoyed copious amounts of the finest Irish beverages.\nHowth #  I did some sight seeing, and on my last day took the train up to Howth for some really beautiful views of the small port city.\nFerry #  Eventually I made my way to a ferry that took my around the southern part of England and straight to Normandy, France. I arrived on my birthday.\n"});index.add({'id':6,'href':'/docs/travelog/europe-2016/france/','title':"France",'content':"Europe Part 2 - France #  Caen #  I stayed with a lovely couple in Caen. They were both school teachers off for the summer, and offered me a terrific breakfast each morning as well as (her words, not mine) a goodbye french kiss before I left. (just on the cheek).\nBefore I did leave, I spent time wandering the beautiful and small but very old village. I saw a few castles and spent my birthday night in what seemed to be the only pub in town- The Vertigo. I managed to communicate through broken french that it was my birthday, and made several friends for the night who bought me a few drinks.\nParis #  My next stop was Paris. It was here that my trusted Birkenstock sandles broke and I found a sporting goods store with cheap shoes and socks that would last me the rest of the trip. I saw all the usual sights, of course. I\u0026rsquo;m really glad I took the time to visit the Notre Dame. It wasn\u0026rsquo;t actually high on my list, but I managed to wander my way near it anyway.\nThe Louvre #  I blocked out an entire day for the Louvre, only realizing afterwards that I really should have blocked out a week. But I had a lot of ground I wanted to cover, and only 6 weeks. So I chose to be economical with my time and stayed in Paris only 3 days. Even so, The Louvre was by far my favorite part of Paris.\nGoodbye #  One of the highlights of Paris was I happened to be their during my host\u0026rsquo;s birthday, so I got invited to a birthday party with a bunch of Parisians! We found a spot of grass on the Promenade and had wine and played games. It was one of the most memorable nights of the trip. :)\n"});index.add({'id':7,'href':'/docs/haikulog/','title':"Haikulog",'content':"Haikus #  "});index.add({'id':8,'href':'/docs/travelog/world-trip-2018/china/beijing/','title':"Beijing",'content':"Beijing #  Beijing is huge. I mean… just huge. There\u0026rsquo;s really no other way to put it. Everywhere you go, everything is overwhelming. From the size of the buildings to the number of people. It was here that I ate a roasted tarantula on a $500 dare from my brother. I should mention my dad at one first. So I knew it was safe.\n    "});index.add({'id':9,'href':'/docs/travelog/world-trip-2018/china/chengdu/','title':"Chengdu (Sichuan Province)",'content':"Chengdu #  Chengdu felt a little more less overwhelming. Still a much larger city than most people in the United States would be used to, but we stayed in an area of the city that could have been mistaken for Chicago, except with everything written in Chinese. And everyone around is Chinese. And they eat crab eggs and fish heads.\nThe highlight, aside from encountering \u0026ldquo;Hot Pot\u0026rdquo; for the first time was visiting the national Panda zoo!\n    "});index.add({'id':10,'href':'/docs/travelog/world-trip-2018/nepal/','title':"Kathmandu, Nepal and The Himalayas / Everest",'content':"Kathmandu #      Himalayas / Everest #  We didn\u0026rsquo;t make it to the summit, we didn\u0026rsquo;t even try. We chartered a helicopter to near base camp. Including the flight into Lukla airport, considered by many to be the most dangerous in the world.\n    "});index.add({'id':11,'href':'/docs/travelog/cuba-2017/','title':"Cuba 2017",'content':"Cuba 2017 #   This is a work in progress. I have a ton of photos to go through and organize.\n Leaving Town #  In the summer of 2017 I had the opportunity to visit Cuba with some co workers. One of them took a lot more photos than I did, which is good because mine weren\u0026rsquo;t very good. I packed my bag and I was ready to go.\nWe packed so much into about a week, and took so many pictures, I\u0026rsquo;m afraid there\u0026rsquo;s no way to do it justice. It was incredible, we drank rum, played on the beach, rode horses into the jungle, smoked cigars, enjoyed art, architecture, history, dancing, music, and on and on. I mean you name it. It was one of the most incredible experiences of my life.\n    "});index.add({'id':12,'href':'/docs/travelog/europe-2016/ireland/dublin/','title':"Dublin",'content':"Europe Part 1.1 - Dublin, Ireland #  Dublin #  "});index.add({'id':13,'href':'/docs/travelog/europe-2016/ireland/howth/','title':"Howth",'content':"Europe Part 1.2 - Howth, Ireland #  Howth #  "});index.add({'id':14,'href':'/docs/travelog/europe-2016/france/paris/','title':"Paris",'content':"Europe Part 2.2 - Paris, France #  Paris #  First day I arrived in Paris, my sandals started giving blisters. So I bought new shoes. After that I was able to enjoy the city without causing any more foot damage.\n    "});index.add({'id':15,'href':'/docs/travelog/europe-2016/france/paris/louvre/','title':"The Louvre",'content':"Europe Part 2.2.1 - The Louvre, Paris, France #  The Louvre #      "});index.add({'id':16,'href':'/docs/travelog/','title':"Travelog",'content':"My Travels #  Europe 2016 #  In the summer of 2016, I packed up a backpack and travelled all over Europe.\nCuba 2017 #  In July of 2017, I went and had some fun with friends and coworkers in Cuba.\nWorld Trip 2018 #  In November of 2018, I went with my parents and brothers to China, Nepal, and Turkey. From there we split off and I visited the Netherlands and Ireland before coming home.\n"});index.add({'id':17,'href':'/docs/travelog/world-trip-2018/turkey/','title':"Istanbul, Turkey",'content':"Istanbul #  Our last stop before all going our separate ways was in Istanbul. Highlight of that visit for me was the Hagia Sophia, once the tallest structure in the world and certainly one of the oldest still standing. There is a lot of history, including that it wasn\u0026rsquo;t officially called Istanbul until 1930. But I\u0026rsquo;ll let you google for the history. I\u0026rsquo;m just here to brag with photographic evidence that I\u0026rsquo;ve been there (although in this case it appears I don\u0026rsquo;t actually make an appearance in my own photos).\nOne of my other favorite parts of Istanbul was the lounge at the Ataturk airport. Free food and drinks for as long as you need to wait for your flight. Only thing is… it doesn\u0026rsquo;t seem like any one checks your ticket once you\u0026rsquo;re in. So if you ever need to hide for a long while…\n    "});index.add({'id':18,'href':'/docs/travelog/world-trip-2018/','title':"World Trip 2018",'content':"China 2017 #   This is a work in progress. I have a ton of photos to go through and organize.\n World Trip #  I think my older brother was drunk when he suggested we literally fly in airplanes around the world for fun. Who could pass that up? For the record, I don\u0026rsquo;t recommend this. I was lucky that he can spend business skymiles on upgrades to first class. It was rough as it was, I think I might have died in coach.\nAnyway, we all met in Los Angeles and caught a plane to Shanghai, China.\n"});index.add({'id':19,'href':'/docs/travelog/europe-2016/belgium/','title':"Belgium",'content':"Europe Part 3 - Belgium #  Brussels #  I was only in Belgium for one night, but I had a lot of fun. I stayed in Brussels. It\u0026rsquo;s a beautiful city, of course. Birthplace of Audrey Hepburn, location of an escape room I nearly had a chance to try and escape from except for the drunk northern irish couple I met and hung with until the girl puked everywhere and gave me 50 euros for some reason. Ah. Belgium.\n   "});index.add({'id':20,'href':'/docs/travelog/europe-2016/ireland/ferry/','title':"Ferry to France",'content':"Europe Part 1.2 - Ferry to France #  Ferry #  "});index.add({'id':21,'href':'/docs/travelog/world-trip-2018/netherlands/','title':"Amsterdam, Netherlands",'content':"Amsterdam #  After Istanbul, for me anyway, was a stop in Amsterdam. One of my very favorite cities I\u0026rsquo;ve ever been to, I can\u0026rsquo;t help but stop when I\u0026rsquo;m in the area. (I have a secret dream to retire on a boat in the canals there)\n   "});index.add({'id':22,'href':'/docs/about/','title':"About",'content':"About Me #  I am Jake Van Alstyne. I live in Salt Lake City, Utah.\nI mostly develop software, but sometimes I take a break from that to spend time in the mountains or travel.\nSoftware I am a software developer. My first experience with code was BASIC on an Apple IIe somewhere around 1990, when I was in my early years at elementary school. I didn\u0026rsquo;t get into it more seriously until I was older, had spent some years in Germany, earned a B.Sc. in Chemical Engineering, and was forced to finally ask myself what I wanted to do with the rest of my life when the economy crashed in 2008. I was able to pivot from Chem. E. to a Ph.D. program in Scientific Computing at the University of Utah. Somewhere along the way, I decided I was far more interested in writing software professionally than academics so I quit the program and managed to convert my credits and research to that point into a M.Sc. in Computing. My focus was computer graphics and scientific visualization.  Music I\u0026rsquo;ve played the guitar more or less consistently since I was 14. Aside from a few lessons here and there, I\u0026rsquo;m self taught. Like my journey through programming, my journey through music has been a joy. In my teens, I worshipped the Dave Mathews Band and took a lot of inspiration from Dave\u0026rsquo;s guitar work. That helped me develop the foundation of rhythm guitar. In my twenties I shifted somewhat to learning the styles of players like Mike McCready, David Gilmour, Jimmy Page, Eric Johnson, and other guitarists with more a lead guitar focus. My fingers will always be too stubby to approach their greatness, but I like to think I have gained a much deeper appreciation of music through their talents. More recently, I\u0026rsquo;ve been learning the piano a bit- Bach\u0026rsquo;s Well Tempered Clavier, Beethoven\u0026rsquo;s Für Elise and Moonlight Sonata, and Debussy\u0026rsquo;s Claire de Lune.   Contact #  Keybase.io\n C3DD AC53 37F4 A575 C072 F270 87DE 3B26 AACE 8D0B\n 18VemeGcEuqsU3M3VRfuuoFjZRDfrNsTXu\n"});index.add({'id':23,'href':'/docs/travelog/world-trip-2018/ireland/','title':"Dublin, Ireland",'content':"Dublin #  You best believe I made a stop in the city where I started my 6 week backpacking trip in 2016. Dublin! Another favorite. I wish I could live dozens of lives so I could truly soak in the beauty, history, and culture of every city on this trip. Not least of all, Dublin.\nI stayed in an historic hotel that, with its winding halls and unpredictable layout, reminded me of \u0026ldquo;House of Leaves\u0026rdquo;. Fortunately, I didn\u0026rsquo;t get trapped.\nSince I missed it in 2016 by about a couple hundred yards (facepalm), I made a more deliberate effort to seek out and visit the Quaternion plaque on Brougham (Broom) Bridge.\nIt says\n Here as he walked by on the 16th of October 1843 Sir William Rowan Hamilton in a flash of genius discovered the fundamental formula for quaternion multiplication i2 = j2 = k2 = ijk = −1 \u0026amp; cut it on a stone of this bridge.\n     "});index.add({'id':24,'href':'/docs/resume/','title':"Resume",'content':"Software Developer #   EDUCATION #  M.Sc. Computing - University of Utah - 2013 #   Improvements to rational surface analysis in toroidal magnetic confinement fields  B.Sc. Chemical Engineering - University of Utah - 2008 #   High temperation fixed bed mercury sequestration on a non-carbonaceous substrate   CV - PDF\n\n EMPLOYMENT #  Mavenlink - September 2017 - Present #  Senior Software Engineer #   Full stack development. Ruby on Rails, React Integrations platform. Elixir, Phoenix  Munkee Apps LLC - October 2015 - August 2017 #  Senior iOS Developer #   iOS Development, implemented original ideas, bug fixes and feature enhancements for existing products  Selfie Inc. - May 2014 - September 2015 #  Senior iOS Developer #   Core iOS app development. Bug fixes, feature enhancements, etc.  USANA - March 2014 - April 2014 #  iOS Consultant #   Improved enterprise reporting modules in internal iOS application, created a custom tree based reporting view. Short term contract position.  NTTData - September 2013 - February 2014 #  iOS Consultant #   CoreData RESTful APIs Improved and extended existing iOS app. Converted SQLite data model to CoreData, increased responsiveness in remote synchronization, etc  Stem Innovation, LLC - March 2013 - September 2013 #  iOS Developer #   [IZON] iOS App Architecture 3rd party design, developed from the ground up Obj-C main app, C and C++ core modules (ffmpeg, rtp client, etc) Heavy use of NSOperation \u0026amp; NSOperationQueue, GCD, etc Live local / remote video feeds ( via Bonjour, P2P, or Proxy ) Multiple-source data polling  K’nowbe Works, LLC - April 2012 - February 2013 #  Graphics Engineer #   3D Interactive Windows MFC COM components in C++ using OpenGL, OSG, and GLSL Bidirectional A* heuristic path finding Gaussian smoothing Image processing Large point cloud rendering Ray tracing GPU shaders I improved their core graphics engine before using those improvements to develop visually striking fully interactive 3 dimensional engineering design tools. For instance, I built a rapid geodata contouring package. I also built intelligent pipe laying design tools which used proprietary equipment modeling software resulting in incredible realism. Agile development team using Team Foundation Server as our revision control and a custom testing harness for unit tests and TDD  FlexSim Software, LLC - December 2011 - March 2012 #  Windows Developer #   Product development team, maintaining and improving the core products in C++ and custom engine scripting, using the Windows API Made numerous improvements to the main product GUI and design, as well as to the core graphics and simulation engine– improving efficiency and performance, as well as deploying a comprehensive TDD / unit testing framework  University of Utah, Computer Science Department - January 2009 - December 2011 #  Web Developer #   Software Development Center at SCI (Scientific Computing Institute at the University of Utah) developing a web portal for a client. HTML, CSS, JavaScript, jQuery and jQuery-UI  Independent Work #  Freelance Developer / Designer #   Designed, developed and deployed numerous iPhone and Mac OS apps for clients and independently. Submitted dozens of new apps and updates to the App Store. Technologies utilized include Cocoa and Cocoa-touch, UIKit, CoreData, StoreKit, WebKit, SceneKit, QuartzCore, CoreVideo, AVFoundation, QTKit, GameKit, CoreVideo, OpenGL, OpenGL-ES, Cocos–2D, etc OnCue - A motion activated surveillance system for the iSight camera with remote viewing capability via the companion iOS app.  Full product development from concept to deployment on App Store     ETC PROJECTS #  OnCue for OS X #   Homepage Motion / Sound based security app OpenGL, GPUImage, GLSL  BTCMonitor #   A simple OS X menubar application for showing current BTC prices BTCMonitor on App Store  BTC-wallet-hashchecker #   A lightweight OS X command line utility for rapid pw attempts on a given encrypted BTC wallet BTC-wallet-hashchecker on GitHub   PROFESSIONAL PROJECTS #  Mavenlink - September 2017 - Current #   Professional Services Web Application Legacy and Greenfield Integrations Platforms Ruby on Rails, Elixir and Phoenix, OTP, RabbitMQ  InstaSize - October 2015 - July 2017 #   Photo and Video Editor for Instagram Swift, Objective-C  Selfie for iPhone app - May 2014 - September 2015 #   An innovative social networking app for face to face conversations Objective-C  OnCue for OS X - October 2011 - Present #   Motion / Sound based security app OpenGL, GPUImage, GLSL  OurPlan iPad App - September 2013 - Present #   Construction scheduling application Multiple Core Data stores, remote synchronization Custom Calendar UI / UX design / implementation  Lacrosse Stats - November 2013 - February 2014 #   Sports statistics application Core Data, Remote data retrieval, Premium features via In App Purchase Custom UI / UX design / implementation  Izon iPad / iPhone app - May 2013 - September 2013 #   Remote video streaming application Core Data, P2P / Proxy Streaming Custom Calendar UI / UX design / implementation   SKILLS #  Software Developer #   Building Intuitive Software Object Oriented Design / Architecture Focused, Elegant, Self-Documenting Code Detailed UI, UX Design 3D Interactive Graphics - OpenGL, GLSL, CUDA Full Stack Developer - Back to Front Development  Some Technologies I\u0026rsquo;ve Used #   Elixir, Phoenix Ruby on Rails, React Objective-C, Swift, C, C++ MySQL, SQLite, PostgreSQL OpenGL, GLSL Cocoa, Cocoa-touch, Windows API, MFC, COM bash, zsh AppleScript, LaTeX, Git  Academic Experience #   Numerical Techniques Scientific Computing \u0026amp; Visualization CAGD, Image Processing Signal Processing Complexity Analysis Data Analysis / Visualization Geometric Design  Other #   Fluent in German 21 years experience playing guitar   TEACHING #  University of Utah, Salt Lake City, Utah USA #   Graduate Instructor  CS 1400 - Introduction to Computer Science   Teaching Assistant  CS 3810 - Computer Organization CS 2420 - Computer Science II CS 2420 - Computer Science II EAE (Engineering Arts and Entertainment Track) CS 1410 - Computer Science I EAE (Engineering Arts and Entertainment Track)     RESEARCH #   Exploration of the Material Point Method on Adaptively Refined Meshes with Hanging Nodes Rational Surface Extraction in Toroidal Magnetic Field Simulations High Temperature Fixed Bed Mercury Sequestration on a Non-Carbonaceous Substrate   HONORS #   Red Hanger Scholarship John Zink Award Chemical Engineering Departmental Full Tuition Scholarship University Honors at Entrance Scholarship  "});index.add({'id':25,'href':'/docs/travelog/world-trip-2018/new-york-and-home/','title':"New York, and Home",'content':"New York #  I had about a 6 hour layover in JFK. Didn\u0026rsquo;t take many pictures. But I ate a lot of seafood and drank a lot of beer.\nHome #  Back in Salt Lake, I celebrated by singing karaoke and showing people my shoes (for some reason.)\n   Of Particular note is how only a few days after I got home, I met an amazing Chinese woman and we began dating seriously shortly after that. Weird how the world works, isn\u0026rsquo;t it?\n"});index.add({'id':26,'href':'/docs/','title':"Docs",'content':""});index.add({'id':27,'href':'/docs/weblog/stony/','title':"Stony",'content':"I recently got stoned for the first time in several years with Caleen. Whoa buddy. Like no time had passed at all. Instantly back where I was when I was a 24/7 stoner (about from 2007 to 2015).\nI thought I might try to write about what it\u0026rsquo;s like for me. I think everyone\u0026rsquo;s experience is distinct, like a fingerprint of your soul. Caleen and I talked about it a little bit. She just always gets giggly. Not me. Sometimes, but unfortunately not usually.\nAlmost the first thing that hits me is the overwhelming sense of being. Like\u0026hellip; simply the fact of existence and sensory input is too much to bear. In normal day life this is not a problem, of course how else could I function? My god, thinking back.. how did I function stoned all the time? The answer is there in my memory and it is this: with great difficulty. I never gave up trying. Out of maybe thousands of deeply conflicted confrontations with the nature of my existence in this reality, I never let go and never gave up on the fact that whether I like it or not it is.\nI\u0026rsquo;m not sure the adjective \u0026ldquo;horrifying\u0026rdquo; is something that will make sense without some expansion. And I guess that\u0026rsquo;s kind of central to my experience. If I can explain why it is horrifying, then maybe I can understand it better.\nLet\u0026rsquo;s start with focusing on a single sensory input. Vision, let\u0026rsquo;s say. That\u0026rsquo;s usually the first thing I become hyper aware of- and I think it makes sense, being sort of the most primary of human senses.\nWhen I got high the other night, almost immediately I became hyper aware of my sense of vision. Being aware isn\u0026rsquo;t itself scary, of course. Being a naturally inquisitive person, and especially under the influence, I start to ask questions. Almost every single time. Why do I have vision? What am I seeing here? It\u0026rsquo;s in moments like this where questions like this aren\u0026rsquo;t satisfied by answers like \u0026ldquo;Well, photons are massless particles (bosons, actually) that travel at the maximum speed limit of the universe whose wave combination behavior can be describe by the Heisenberg uncertainty principle\u0026rdquo;.\nEven sober, sometimes I get into this mood I think most philosophers and scientists in the history of the world must get at some point. It\u0026rsquo;s fascinating to be able to describe a feature reality with such detail. But it doesn\u0026rsquo;t really get at the heart of, like, why though? Most experimental physicists I\u0026rsquo;ve ever read say something along the lines of \u0026ldquo;Yeah, it\u0026rsquo;s crazy. But all we can do is report what we find even if it seems insane.\u0026rdquo; So, my stoned mind really wants to think more about this, presumably under the impression that the effects of a plant no less a child of the universe than it can help connect it better to its true nature.\nThis is where things branch off.\nThere\u0026rsquo;s a lot of paths a mind in an altered state can wander when asking questions like this. One of them is to doubt the fabric of reality altogether. That\u0026rsquo;s maybe the scariest one, because when you start to think that maybe your experience is really just a virtual reality helmet inside an inception style simulation inside the real reality\u0026hellip; and critically you begin to actually believe this well… scary ideas can become scary reality quickly.\nOne of the ways I\u0026rsquo;ve managed this in the past, and it came in handy the other night is to force myself to acknowledge the inputs of my senses and only the inputs of my senses as reality. My thoughts are complicated machinations informed and developed across decades of a mixture of pleasure and abuse, and therefore are the primary thing not to trust.\nIf what I see right now is a woman offering nice words and calming behavior, I choose to trust that. My inner turmoil about how well I actually know this woman I have been close friends for a decade is garbage. That is a symptom of an unwell mind, possibly (obviously) one under the influence of an intoxicant. What is real right now is Caleen being a good friend. What my mind is doing is playing tricks with my senses.\nNow, this might seem obvious. And it is, from a place of sobriety. But in the moment when your mind is doing these things (you sort of asked it to do) it can be utterly horrifying. Your mind is telling you every single thing your senses are telling you are potential lies. The only way to win is maintain a part of your mind that questions everything, even itself.\nI\u0026rsquo;ve tried to paint a relatable picture of what it\u0026rsquo;s like for me. In actuality, it can be vastly more intense than doubting a friendship, or even reality. Imagine the kinds of things that you could let your mind replace reality if you let it. That\u0026rsquo;s what makes it truly horrifying, when every aspect of reality comes into question. From your fridge to your fingers to your friends.\nNow, I\u0026rsquo;d love to dig into why my experience is not consistently giggily like Caleen\u0026rsquo;s, but I\u0026rsquo;m afraid that touches on some personal stuff I\u0026rsquo;m not ready to get into right now. Suffice it to say, it\u0026rsquo;s a mix of my experiences in life and a deliberate combination of no fear and punishment gluttony.\nI would normally never publish something like this, but I\u0026rsquo;m getting into a stage of life where I think I\u0026rsquo;m pretty clearly safe to do so. And that is refreshingly nice to be able to say.\n"});index.add({'id':28,'href':'/docs/haikulog/movie/','title':"Movie",'content':"Watching a movie\nWithout popcorn is not good\nIt is very bad\n"});index.add({'id':29,'href':'/docs/haikulog/chris-bacon/','title':"Chris Bacon",'content':"We can talk about\nThe haikus Chris bacon sir\nAny time you wish\n"});index.add({'id':30,'href':'/docs/haikulog/singing/','title':"Singing",'content':"Someone is singing\nIn the middle of the night\nOutside my window\n"});index.add({'id':31,'href':'/docs/haikulog/earthquakes/','title':"Earthquakes",'content':"The earth shakes at times\nIt is most unwelcome here\nAmong us earthlings\n"});index.add({'id':32,'href':'/docs/weblog/how-i-post-to-this-blog-using-ios-shortcuts-and-pythonista/','title':"How I (used to) post to this blog using iOS Shortcuts and Pythonista",'content':"EDIT: This blog is now hosted using Hugo, not Jekyll. I have to find a way to migrate what I\u0026rsquo;ve described here.\nI\u0026rsquo;ve had this blog for many years, and basically never posted anything. I wanted to become better about that, so I\u0026rsquo;ve been writing more haikus and trying to write up some of my home projects. My blog uses Jekyll and is hosted on Github Pages which already makes it pretty easy to write content but I wanted to see if I could make it even easier. I started with a \u0026ldquo;create new haiku\u0026rdquo; shortcut. This way anytime I have an idea for a haiku it doesn\u0026rsquo;t matter where I am, as long as I have an internet connection on my phone I can post a new one easily.\nSo, I began playing with iOS Shortcuts. I wanted a button on my phone that would let me write and post to my blog without needing anything else. The solution I came up with uses a bit of Python in Pythonista for some formatting, as well as Working Copy for the git actions.\nUnfornately, the only way to share an iOS shortcut is to share it directly. I wanted to export and paste a JSON payload here or something so others could edit and import easily, but it looks like the only way is to share a public link to it. So, here\u0026rsquo;s my shortcut for writing and posting a haiku. With a little editing it should be easy enough to change if you wanted to rework it to post to your own blog. It assumes you have the Working Copy app I linked above, as well as a Pythonista script.\nHere are the actions it performs:\n Pull the latest changes from your blog repo Ask for the name of the Haiku Executes a search in Giphy for the given title and lets you choose your favorite gif Stages the chosen gif in /assets in your repo Asks for the content of the Haiku. Adding an empty line between each line of content renders the content on new lines. I haven\u0026rsquo;t figured this part out yet, but if you don\u0026rsquo;t do this the whole haiku ends up on one line. It then sends the input to the Pythonista script to format it as Jekyll front matter It takes the resulting formatted content and stages it as a new file in your repo It commits the changes to your repo and pushes to remote It then texts my girlfriend to let her know there\u0026rsquo;s a new haiku (I haven\u0026rsquo;t tested this with other people, but I expect that unless you have her number it won\u0026rsquo;t work for you)  So now the only piece missing is the Pythonista script. Here it is:\nfrom webbrowser import open from datetime import date from urllib.parse import quote, unquote import sys import x_callback_url title=sys.argv[1] body=sys.argv[2] gif=quote(sys.argv[3]) haiku='''--- layout: haiku category: Haikus title: ''' + title + ''' --- ''' + body + ''' ![--''' + title + '''--](\\{\\{ site.url \\}\\}/assets/''' + gif + '''.gif)''' x_success = sys.argv[-1] # shortcuts-production://x-callback-url/ic-success/\u0026lt;UUID\u0026gt; x_cancel = x_success.replace('ic-success', 'ic-cancel') x_error = x_success.replace('ic-success', 'ic-error') x_success += '?x-source=Pythonista3' x_success += '\u0026amp;result=' + quote(haiku) x_success += '\u0026amp;datetime=' + quote(str(date.today().strftime('%Y-%m-%d'))) open(x_success) I\u0026rsquo;ve been having fun with this, I\u0026rsquo;ve also made a version that will make a full blog post like this one but haven\u0026rsquo;t used it much since writing long form on an iOS device is not that convenient for me. Anyway, if you\u0026rsquo;re reading this feel free to play with my shortcut and python script! I\u0026rsquo;d love to hear about any projects you use them for!\n"});index.add({'id':33,'href':'/docs/weblog/gpg-yubikey-you/','title':"GPG \u0026 YubiKey \u0026 You",'content':"I\u0026rsquo;ve recently taken on the task of setting up my YubiKeys for usage beyond 2 factor auth. Something I learned was that OpenPGP smartcards (which include YubiKeys) have slots for three separate keys: Signature, Encryption, and Authentication.\nMy first goal is to sign git commits with it. Because I am a man of negligible importance, this is in fact NOT an excercise in security. I\u0026rsquo;m taking more of a hobbyist approach. If security was of a more significant concern in my life, I would probably generate my keys in a live booted and air gapped Tails environment.\nWhen I started going down this route I had only in the first place acquired my YubiKey to simplify 2 factor authorization, a flow that I have found myself increasingly spending time due to work and the fact I turn it on everywhere that supports it. I think I was vaguely aware they could be used for more. Regardless, I started by playing around with signing. One of the first things I became aware of was that these things have PIN codes. Never needed them for 2FA, but for managing GPG keys you do. The default user PIN (which is used for signing, among other things) is 123456 and the default admin PIN (used for modifying certain card attributes) is 12345678.\nIf you\u0026rsquo;re following along, I\u0026rsquo;m assuming you have a YubiKey and a recent version of GnuPG.\nConfigure your YubiKey #  To change the PIN (and configure things like your name, language, etc) run gpg --card-edit with your key plugged in. You should see information about your key. Type admin and help to enable and list the available commands. Use passwd to change the user PIN code.\nA little about GPG keys #  GPG keys have capabilities: Sign, Certify, and Encrypt. When you generate a GPG public / private keypair, by default you get a primary pub/priv key and a sub pub/priv key. The primary key can Sign and Certify. The subkey can Encrypt. The reason for this default is that Certify is all powerful. It really is your identity. Delegating powers to other keys signed by it is a good way to reduce your security footprint. If someone steals your encrypt key, all you have to do is revoke it, create a new one, and Certify it with your unstolen primary key. If someone steals your primary private key, well they\u0026rsquo;ve just stolen the ability to revoke your other keys or make new keys as you. So keep it extra safe.\nCreate a GPG key #  It\u0026rsquo;s time to generate your GPG key. gpg --expert --full-gen-key\n Select RSA and RSA(default) Key size: depending on the version of your key  YubiKey NEO - 2048 YubiKey 4 / 5 - 4096   Do it again for the subkey Pick an expiration date Enter your name (must be more than 5 characters) Enter your email Enter an optional comment  Note the ID of the key generated. For fun, let\u0026rsquo;s look at what we\u0026rsquo;ve got so far. Run gpg --edit-key \u0026lt;KEY ID\u0026gt;. You should see something like\nSecret key is available. gpg: checking the trustdb gpg: marginals needed: 3 completes needed: 1 trust model: pgp gpg: depth: 0 valid: 2 signed: 0 trust: 0-, 0q, 0n, 0m, 0f, 2u gpg: next trustdb check due at 2021-03-12 sec rsa4096/98973C978ECA988D created: 2020-03-14 expires: never usage: SC trust: ultimate validity: ultimate ssb rsa4096/015D68EE1E7AC274 created: 2020-03-14 expires: never usage: E [ultimate] (1). Jake Van Alstyne (testing) \u0026lt;email@address.org\u0026gt; The usage of the first key is marked as SC. The second is E. That means the primary key can sign and certify, while the subkey can encrypt.\nIf you have an existing key, you could use it to sign this new one to maintain a chain of custody: gpg -u \u0026lt;your_old_keyid\u0026gt; --sign-key \u0026lt;longid\u0026gt;\nWhile we\u0026rsquo;re here, let\u0026rsquo;s add separate authentication and signing keys to prepare to fill the slots on the YubiKey.\nAuthentication Key #  If you\u0026rsquo;re still at the gpg prompt gpg\u0026gt; from the last command, exit out with Ctrl-C or quit and enter gpg --expert --edit-key \u0026lt;KEY ID\u0026gt;. Notice the extra flag for expert. Now enter the command addkey.\n Pick RSA. Toggle capabilities until only authentication is enabled. You should need to enter each option once: S, E, A Enter Q to finish Pick the key size Pick the expiration (good idea to keep it the same as your master key) Follow the rest of the prompts  Signing Key #  The steps are the same as for the authentication key, only you should only have to deselect Encrypt when picking the key capabilities since by default Signing and Encryption are selected. If you quit out of here now, make sure to save or you\u0026rsquo;ll lose the keys you just made.\nBackup your keys #  It\u0026rsquo;s a good idea to keep a backup somewhere safe.\ngpg --armor --output privkey.sec --export-secret-key \u0026lt;longid\u0026gt; gpg --armor --output subkeys.sec --export-secret-subkeys \u0026lt;longid\u0026gt; gpg --armor --output pubkey.asc --export \u0026lt;longid\u0026gt; Import key to YubiKey #  Make sure the YubiKey is plugged into your computer. Edit the key again, if you aren\u0026rsquo;t already gpg --edit-key \u0026lt;KEY ID\u0026gt;. Enter the command toggle followed by keytocard.\n Enter y to move the primary key Select 1. This moves the signature subkey to the signature slot of the YubiKey.  Enter key 1 (which now should select the encryption key) followed by keytocard. Select 2. This moves the encryption key to the encryption slot.\nEnter key 1 again and then key 2. keytocard and 3. This does the same but for the authentication key.\nNow quit and y for save.\nNow your secret keys are on your YubiKey and can be used for their intended purpose when it\u0026rsquo;s connected.\nConfigure Git for commit signing #  Configure git for GPG signing:\n git config --global commit.gpgsign true git config --global user.signingkey \u0026lt;KEY ID\u0026gt;  And let\u0026rsquo;s restart the GPG agent: gpg-connect-agent reloadagent. Get out of there with /bye. Now when you make a commit, git will require the key to be present. If it\u0026rsquo;s not, the commit will fail. If you want to make a signed commit and see what it looks like in the log, the command for that is git log --show-signature.\ngpg: Signature made Sat Mar 14 03:30:27 2020 MDT gpg: using RSA key 05FFE31C369D8F25CFFF2167FDF8E68C5B840388 gpg: Good signature from \u0026quot;Jake Van Alstyne \u0026lt;jakeva@gmail.com\u0026gt;\u0026quot; [ultimate] Author: Jake Van Alstyne 🎩 \u0026lt;jakeva@gmail.com\u0026gt; Date: Sat Mar 14 03:27:35 2020 -0600 Add YubiKey Post Configure Github for the \u0026lsquo;Verified\u0026rsquo; stamp #  gpg --armor --export \u0026lt;KEY ID\u0026gt; | pbcopy and take it to add as a new GPG key on Github. If you forget this stamp, your commits will still show as signed but \u0026lsquo;Unverified\u0026rsquo;.\nEtc #  Something interesting I noticed is that the gpg-agent caches the key. I removed the key from my computer before making another commit and it still got signed. It looks like this is set in ~/.gnupg/gpg-agent.conf so just a heads up.\n"});index.add({'id':34,'href':'/docs/haikulog/blogs/','title':"Blogs",'content':"Blogs have to be good\nIf you want people to read\nPeople don’t read mine\n"});index.add({'id':35,'href':'/docs/haikulog/food/','title':"Food",'content':"My girlfriend makes food\nShe learned this art in China\nIt tastes like Chinese\n"});index.add({'id':36,'href':'/docs/haikulog/virus/','title':"Virus",'content':"Is it a virus\nIf it doesn’t go viral\nAnd other questions\n"});index.add({'id':37,'href':'/docs/haikulog/wasting-time/','title':"Wasting time",'content':"I like wasting time\nAnd I like wasting your time\nI did it again\n"});index.add({'id':38,'href':'/docs/haikulog/haiku/','title':"Haiku",'content':"This is a haiku\nIt checks all of the boxes\nAnd now it is done\n"});index.add({'id':39,'href':'/docs/haikulog/beer/','title':"Beer",'content':"Beer is very good\nI drink it often for fun\nIncluding right now\n"});index.add({'id':40,'href':'/docs/haikulog/richard/','title':"Richard",'content':"Richard has nice breath\nI wish he could write good code\nBut alas he can’t\n"});index.add({'id':41,'href':'/docs/haikulog/typos-from-old-books/','title':"Typos from old books",'content':"A piecture is just\nA pie chart of types of pie\nIn Antarctica\n"});index.add({'id':42,'href':'/docs/haikulog/ramen/','title':"Ramen",'content':"Ramen is so good\nIt has noodles, pork, and stuff\nTo stuff in my face\n"});index.add({'id':43,'href':'/docs/weblog/raspberry-pi-btc-node/','title':"Raspberry Pi BTC Node",'content':"Time to put one of my spare Raspberry Pis to work #  I woke up this morning and thought, \u0026lsquo;Hey why not get a full BTC node running on one of those Pis you got laying around?\u0026rsquo; So that\u0026rsquo;s what I\u0026rsquo;m doing today.\nBasics #  This assumes something like Raspbian Lite is already installed and SSH access configured. For Wifi, I use these Edimax USB chips. Configuring them is not too difficult. It boils down a simple config in /etc/network/interfaces/\nauto lo iface lo inet loopback iface eth0 inet dhcp auto wlan0 allow-hotplug wlan0 iface wlan0 inet dhcp wpa-ssid \u0026quot;**YOUR_WIFI**\u0026quot; wpa-psk \u0026quot;**YOUR_PASSWORD**\u0026quot; I\u0026rsquo;m going to install to the 32 GB SD mini card I used for the OS, which means I\u0026rsquo;m not planning on storing all the blocks. And since flash is less resilient than a HDD, I\u0026rsquo;m going to disable SWAP.\nsudo swapoff --all\nInstalling the Bitcoin client #  Go to https://github.com/bitcoin/bitcoin/releases and make not of the newest stable release. For me it\u0026rsquo;s currently 0.19.0.1. So, with that:\ncd ~ git clone -b v0.19.0.1 https://github/com/bitcoin/bitcoin.git cd bitcoin I\u0026rsquo;m going to install it without a wallet, since I only want a node.\n./autogen.sh ./configure CXXFLAGS=\u0026quot;--param ggc-min-expand=1 --param ggc-min-heapsize=32768\u0026quot; --enable-cxx --without-gui --disable-shared --with-pic --disable-tests --disable-bench --enable-upnp-default --disable-wallet make # This will take a long time, best run in tmux or screen, and grab a beer sudo make install Configure #  For this, I want a bitcoin user. sudo adduser bitcoin\nNow switch to the new user sudo su - bitcoin\nAnd create the app data directory mkdir ~/.bitcoin\nAdd the following to ~/.bitcoin/bitcoin.conf\n# makes client run in background daemon=1 # is required by Fail2Ban described below logips=1 # magic RBP optimisations maxconnections=40 maxuploadtarget=5000 # Run without SWAP dbcache=100 maxorphantx=10 maxmempool=50 upnp=1 prune=550 # Only keep the last two days of blocks if like me you are running off a small SD card Return to the pi user exit\nNow create the systemd service to launch the bitcoin client daemon sudo vim /etc/systemd/system/bitcoind.service and give it the following\n[Unit] Description=Bitcoin daemon After=network.target [Service] ExecStart=/usr/local/bin/bitcoind -conf=/home/bitcoin/.bitcoin/bitcoin.conf -pid=/home/bitcoin/.bitcoin/bitcoind.pid # Creates /run/bitcoind owned by bitcoin RuntimeDirectory=bitcoind User=bitcoin Type=forking PIDFile=/home/bitcoin/.bitcoin/bitcoind.pid Restart=on-failure # Hardening measures #################### # Provide a private /tmp and /var/tmp. PrivateTmp=true # Mount /usr, /boot/ and /etc read-only for the process. ProtectSystem=full # Disallow the process and all of its children to gain # new privileges through execve(). NoNewPrivileges=true # Use a new /dev namespace only populated with API pseudo devices # such as /dev/null, /dev/zero and /dev/random. PrivateDevices=true # Deny the creation of writable and executable memory mappings. MemoryDenyWriteExecute=true [Install] WantedBy=multi-user.target Make sure the new service starts on boot sudo systemctl enable bitcoind\nSecurity #  Uncomplicated firewall sudo apt install ufw\nAllow limited ssh sudo ufw limit ssh\nAllow for main net bitcoin traffic sudo ufw allow 8333 comment \u0026quot;Bitcoin mainnet\u0026quot;\nEnable the firewall sudo ufw enable\nPreview the enforced rules sudo ufw status verbose\nInstall Fail2ban sudo apt install fail2ban\nSee the active jails - for now it will only be sshd sudo fail2ban-client status\nStart the bitcoin client sudo systemctl start bitcoind\nIt will take a few minutes to start, but if you want to monitor its progress switch back to the bitcoin user and enter tail -n 100 -f ~/.bitcoin/debug.log\nYou will need to figure out how to forward port 8333 to your new btc node depending on your router.\nCheck it\u0026rsquo;s accessible from the outside world with curl -sL https://bitnodes.earn.com/api/v1/nodes/me-8333/ | jq\n"});index.add({'id':44,'href':'/docs/weblog/diy-nas/','title':"Building my own NAS",'content':"First a little background #  I had a couple old NAS storage solutions I pulled out of, well, my storage unit a while back. Tried to set them up in my office and found them to be really difficult to use, but the data on them is still good. So I pulled the disks out and decided to look into upgrading to something newer. After some research, I concluded the existing out-of-the-box solutions available are overpriced for what they offer. I decided I wanted more control over the parts to reduce cost, as well as having more freedom in setting up the server software so I looked into building my own.\nParts #  I used PC Partpicker to help me narrow down what I was looking for. I went in blind hoping I\u0026rsquo;d find a tower suitable for what I wanted, and I think I found the perfect one. Everything else was selected to fit it.\n   Part Price     Fractal Design Node 804 MicroATX Mid Tower Case    This is particularly recommended for a NAS build. Both on Amazon and Newegg, reviews were a bit mixed but for a little over $100 I decided I could handle a few imperfections. Right now I have 7 3.5\u0026quot; drives ranging from 1 to 4 TB, and 1 2.5\u0026quot; SSD I want to use as the boot disk. Between disk bay utilization and cooling options, this tower promises some pretty interesting flexibility. In their own words, it has a \u0026ldquo;Unique hard drive mounting system, fitting up to 8 x 3.5\u0026rdquo;, 4 x 2.5\u0026quot; or up to 10 x 3.5\u0026quot;, 2 x 2.5\u0026quot; drives HDD/SSD\u0026quot; all inside a 13.5 x 12 x 15.3in package. That\u0026rsquo;s 12 slots for hard drives! That should fit my needs perfectly with plenty of room for future upgrades and fit nicely under my desk. $109.99   AMD Ryzen 3 2200G 3.5 GHz Quad-Core Processor    At first I was just interested in picking up a 2 core CPU since I intend on doing nothing with this machine except serving up files to my home network. I\u0026rsquo;m the only user, so I don\u0026rsquo;t need much CPU. However, I found it tricky to pair up a 2 core CPU with a motherboard so I just picked a reasonable quad core. It might be a little over kill, but that\u0026rsquo;s ok. $107.68   I had more trouble finding the right motherboard. I ordered a cheap one early on, forgetting to check how many SATA slots it had. What I ordered was the ASRock B450M-HDV R4.0 Micro ATX AM4 Motherboard    which comes with 4 SATA 6 Gb/s slots. That won\u0026rsquo;t be enough, but for the price, I can slap some extra slots in with the… $69.97   Ziyituod SATA3.0 Card    6 SATA 6 Gb/s PCIe controller. Problem solved. $39.95   Crucial 4GB Single DDR4    Like I don\u0026rsquo;t need much processing power, I don\u0026rsquo;t need much ram. Two sticks of 4 GB DDR4 should do it. $39.98   be Quiet! Pure Rock Slim - CPU Cooler    A concern I had was how loud this thing was going to be. I picked a CPU cooler that promises it gets no louder than 25 Db. The fans that come with the tower might be a different story, but I can worry about those later if it\u0026rsquo;s an issue. Anyway, this thing is pretty cheap too. $33.28   EVGA SuperNOVA 800W    And the final piece is the power supply. Need enough power for up to ten drives, so here we are. $159.99    This brings the total to a little over $500. By comparison you can get an 8 bay NAS by Synology for $931.\nNow I wait #  I haven\u0026rsquo;t got all the parts yet, but I\u0026rsquo;ll post an update when I get it built and have a chance to play with it. I expect there will be some tradeoffs, like the interior will probably be a bit cramped and hard to work with. Maybe it will get a little hot or loud with the four fans. But I\u0026rsquo;m excited, I didn\u0026rsquo;t think I\u0026rsquo;d be able to find a solution that would fit 10 drives in around a square foot of floor space. At less than $500, for me it\u0026rsquo;s a no brainer.\nAnd what\u0026rsquo;s next? #  Of course, I\u0026rsquo;m already thinking down the road. Right now I only have a little over 12 TBs of hard drives ready to put to use (consisting mostly of Bluray backups and music), but at $485 for a 16 TB Drive I am imagining a world where I spend a small fortune for a +13x increase and while I\u0026rsquo;ll probably never need it, it is pretty fun to imagine.\nSmall Update #  Ok so I bought two of the 16 TB drives intending to get a simple mirror up. Funny story, I snapped the plastic on the sata connector of one of them trying to fit it into the case. It is pretty tight in there. Anyway, I bought a third to replace it. But by the time it arrived I decided it was worth trying to salvage the broken one. The pins were still there and I had the broken off plastic piece, so I sort of put it back together delicately and slid it all back in. It worked! The system connected to the drive and now I\u0026rsquo;ve got a healthy 32 TB Raid Z1 pool running in my FreeNAS!\nI\u0026rsquo;m working now on setting up torrenting over OpenVPN among other things. I\u0026rsquo;ll write some of that up in separate blog posts.\n"});index.add({'id':45,'href':'/docs/haikulog/denver/','title':"Denver",'content':"I am in Denver\nIt is just like Salt Lake City\nExcept, like, bigger\n"});index.add({'id':46,'href':'/docs/haikulog/in-defense-of-the-touchbar/','title':"In defense of the new MacBook Pro touchbar",'content':"It is a fun way\nTo do things you did before\nWhy not something new?\n"});index.add({'id':47,'href':'/docs/haikulog/getting-out-of-bed/','title':"Getting out of bed",'content':"No no no no no\nNo no no no no no no\nNo no no no no\n"});index.add({'id':48,'href':'/docs/haikulog/waking-up/','title':"Waking up",'content':"Nope, nope, nope, nope, nope\nNope, nope, nope, nope, nope, nope, nope\nNope, nope, nope, nope, nope\n"});index.add({'id':49,'href':'/docs/haikulog/space-time/','title':"Space-time",'content':"Time and space are one\nSo it is all relative\nPlease pardon the pun\n"});index.add({'id':50,'href':'/docs/haikulog/evening/','title':"Evening",'content':"In the evening\nI am joined by Page and Plant\nbut do not ascend\n"});index.add({'id':51,'href':'/docs/haikulog/breakfast/','title':"Breakfast",'content':"The first and best meal\nForget brunch, breakfast is good\nenough to eat twice\n"});index.add({'id':52,'href':'/docs/haikulog/chairs/','title':"Chairs",'content':"Made of good hard wood\nSitting straight is important\nIf you like your spine\n"});index.add({'id':53,'href':'/docs/haikulog/bubbles/','title':"Bubbles",'content':"Bubbles down the drain\nRemind me I am one too\nOne day I will pop\n"});index.add({'id':54,'href':'/docs/haikulog/music/','title':"Music",'content':"Listen to music\nFrom Mozart to the Beatles\nFeel infinity\n"});})();